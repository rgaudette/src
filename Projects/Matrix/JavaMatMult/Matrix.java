/* Generated by Together */
import java.math.*;

public class Matrix {
    public void Matrix() {
        m = 0;
        n = 0;
    }

    public Matrix(int nRows, int nCols) {
        m = nRows;
        n = nCols;
        array = new float[m][n];
    }

    public void Multiply(Matrix x, Matrix y) {
        //
        //  Check compatibility
        //

        //
        //  Save the indirect calculation
        //
        int mX = x.m;
        int mY = y.m;

        //
        //  Loop over the columns of y
        //
        int iColY, iRowX, iColX;
        for (iColY = 0; iColY  < mY; iColY++) {
            for (iRowX = 0; iRowX < mX; iRowX++) {
				array[iRowX][iColY] = (float) 0.0;
				for (iColX = 0; iColX < mY; iColX++) {
					array[iRowX][iColY] +=
                        x.array[iRowX][iColX] * y.array[iColX][iColY];
                }
            }
        }
    }

    public void RandUniform() {
		for (int iCol = 0; iCol < n; iCol++ ) {
            for (int iRow = 0; iRow < m; iRow++) {
         		array[iRow][iCol] = (float) Math.random();
            }
        }
    }

    private float[][] array;
    private int n;
    private int m;
}
