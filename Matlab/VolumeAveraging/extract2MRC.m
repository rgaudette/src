%extract2MRC    Extract sub volumes to MRC files
%
%   extract2MRC(basename, mRCImage, volSize, ...
%               imodCenter, idxObject, idxContour, idxPoints,...
%               motiveList, flgEM, flgSwapModelYZ, flgSwapVolume)
%
%   basename    The basename of the MRC files to be created, each filename will
%               be appended with _i.mrc where i is the index of the point in
%               center model.
%
%   mRCImage    The MRCImage containing the volume
%
%   volSize     The size of the sub volume to extract [nX nY nZ]
%
%   imodCenter  An IMODModel specifying the centers of the particles to extract
%
%   idxObject   The object index containing the center coordinates
%
%   idxContour  The contour index containing the center coordinates
%
%   idxPoints   OPTIONAL: The points to extract from the model (default: all
%               points, an empty array also specifies all points).
%
%   motiveList  OPTIONAL: Transform the sub-volume by the rotation and
%               translation specified in the motive list.
%
%   flgEM       OPTIONAL: Also write an EM format file.
%
%   flgSwapModelYZ  OPTIONAL: Swap the model Y and Z dimensions before using
%               on the volume (default: 0).
%
%   flgSwapVolume  OPTIONAL: Swap the extracted sub volume Y and Z dimensions
%               before writing out the MRC and/or EM files.
%
%   extract2MRC extracts the sub volumes from an MRC volume specified by Imod
%   model object specified.
%
%   Bugs: none known

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  $Author: rickg $
%
%  $Date: 2005/08/15 23:17:36 $
%
%  $Revision: 1.10 $
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function extract2MRC(basename, mRCImage, volSize, ...
                     imodCenter, idxObject, idxContour, idxPoints, ...
                     motiveList, flgEM, flgSwapModelYZ, flgSwapVolumeYZ)
global PRINT_ID
if PRINT_ID
    fprintf('$Id: extract2MRC.m,v 1.10 2005/08/15 23:17:36 rickg Exp $\n');
end

idxOrigin = floor(volSize / 2) + 1;

points = imodPoints2Index(getPoints(imodCenter, idxObject, idxContour));

if nargin < 7 | isempty(idxPoints)
  idxPoints = [1:size(points,2)];
end

if nargin < 9
  flgEM = 0;
end
if nargin < 10
  flgSwapModelYZ = 0;
end
if nargin < 11
  flgSwapVolumeYZ = 0;
end

% Get the full volume size
dims = getDimensions(mRCImage);
if flgSwapModelYZ
  dims = dims([1 3 2]);
end

for idxPoint = idxPoints
  center = points(:, idxPoint);
  idxX = floor([center(1)-floor(volSize(1)/2) ...
                center(1)+floor(volSize(1)/2)-1]);
  idxY = floor([center(2)-floor(volSize(2)/2) ...
                center(2)+floor(volSize(2)/2)-1]);
  idxZ = floor([center(3)-floor(volSize(3)/2) ...
                center(3)+floor(volSize(3)/2)-1]);
  if flgSwapModelYZ
    temp = idxZ;
    idxZ = idxY;
    idxY = temp;
  end

  % Check the indices for any out of range
  if min(idxX) < 1 | max(idxX) > dims(1)
    fprintf('X index of range for point %d\n', idxPoint);
    error(['Selected range ' int2str(min(idxX)) ' ' int2str(max(idxX))]);
  end

  if min(idxY) < 1 | max(idxY) > dims(2)
    fprintf('Y index of range for point %d\n', idxPoint);
    error(['Selected range ' int2str(min(idxY)) ' ' int2str(max(idxY))]);
  end

  if min(idxZ) < 1 | max(idxZ) > dims(3)
    fprintf('Z index of range for point %d\n', idxPoint);
    error(['Selected range ' int2str(min(idxZ)) ' ' int2str(max(idxZ))]);
  end

  subVolume = getVolume(mRCImage, idxX, idxY, idxZ);
  if flgSwapVolumeYZ
    subVolume = permute(subVolume, [1 3 2]);
  end

  if nargin > 7
    % Recall that the MOTL has the Euler angles in a strange order
    % Shift then rotate the particle.  The inverse transform used to create the
    % motive list is applied because the motive list was generated by
    % transforming the reference to the particle
    subVolume = ...
      volumeShiftRotateInv(subVolume, -motiveList([11 12 13], idxParticle)', ...
      motiveList([17 19 18], idxParticle)' * -pi / 180, idxOrigin);
  end
  
  mrcSub = MRCImage(subVolume);
  strIndex = sprintf('%03d', idxPoint);
  save(mrcSub, [basename '_' strIndex '.mrc']);
  if flgEM
    writeEM(mrcSub, [basename '_' strIndex '.em']);
  end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  $Log: extract2MRC.m,v $
%  Revision 1.10  2005/08/15 23:17:36  rickg
%  Type fix
%
%  Revision 1.9  2005/08/15 22:55:50  rickg
%  Added global print ID
%
%  Revision 1.8  2004/12/01 01:06:44  rickg
%  Switch to volumeShiftRotateInv
%
%  Revision 1.7  2004/11/08 05:30:40  rickg
%  Fixed 1/2 sample error in model to index mapping
%
%  Revision 1.6  2004/11/01 15:28:47  rickg
%  Added optional motiveList to transform volume before writing
%
%  Revision 1.5  2004/08/24 22:08:28  rickg
%  Detect out of range indices
%  Default parameter fixes
%
%  Revision 1.4  2004/08/20 22:27:43  rickg
%  Fixed help section
%
%  Revision 1.3  2004/08/20 21:44:33  rickg
%  Removed redundant center assignments
%
%  Revision 1.2  2004/08/12 23:03:39  rickg
%  Reordered input args
%  added flags
%  added optional points arg
%
%  Revision 1.1  2004/08/11 23:24:22  rickg
%  Initial revision
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
